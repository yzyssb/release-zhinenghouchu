import React, {PropTypes} from 'react';
import Table from 'antd/lib/table';
import {Popconfirm} from 'antd/lib';
import CpAddModal from './CpAddModal';
import CpImportModal from './CpImportModal';
import {getUserToken} from '../../../../services/CommonService';
import {config} from '../../../../services/HttpService';
import Form from 'antd/lib/form';
import Input from 'antd/lib/input';
import Select from 'antd/lib/select';
import styles from './CpAddModal.less';
import Button from 'antd/lib/button';
import message from "antd/lib/message";

import Radio from "antd/lib/radio";
import Checkbox from 'antd/lib/checkbox';
import {Col, Row} from 'antd/lib';
import InputNumber from 'antd/lib/input-number';
const RadioGroup = Radio.Group;
import Rate from 'antd/lib/rate';
import UpLoadImage from '../../../../components/base/common/UpLoadImage';
import Breadcrumb from 'antd/lib/breadcrumb';
import CpxxDetailModal from './modal/CpxxDetailModal';
const FormItem = Form.Item;
import Switch from 'antd/lib/switch';
import moment from "moment/moment";
import DatePicker from 'antd/lib/date-picker';
const { TextArea } = Input;

const CpxxPage = ({
                      form: {
                          getFieldDecorator,
                          validateFields,
                          getFieldsValue,
                          resetFields,
                          setFieldsValue,
                          getFieldValue,
                      },
                      dispatch, cpxx, cpfl, cpdw, zfgl, gggl,tcxx,
                      pageNo,
                      total,
                      current,
                      dataSource,

                  }) => {

    const formItemLayout = {
        labelCol: { span: 4 },
        wrapperCol: { span: 18 },
    };

    const Option = Select.Option;

    const children = [];

    if (cpfl.all && cpfl.all.length > 0){
        cpfl.all.map((i, j) => {

            children.push(
                <Option key={i.key} value={i.key}>{i.value}</Option>
            )

        });
    }

    var strChineseFirstPY = "";
    //此处收录了375个多音字
    var oMultiDiff = {
        "19969": "DZ",
        "19975": "WM",
        "19988": "QJ",
        "20048": "YL",
        "20056": "SC",
        "20060": "NM",
        "20094": "QG",
        "20127": "QJ",
        "20167": "QC",
        "20193": "YG",
        "20250": "KH",
        "20256": "ZC",
        "20282": "SC",
        "20285": "QJG",
        "20291": "TD",
        "20314": "YD",
        "20340": "NE",
        "20375": "TD",
        "20389": "YJ",
        "20391": "CZ",
        "20415": "PB",
        "20446": "YS",
        "20447": "SQ",
        "20504": "TC",
        "20608": "KG",
        "20854": "QJ",
        "20857": "ZC",
        "20911": "PF",
        "20504": "TC",
        "20608": "KG",
        "20854": "QJ",
        "20857": "ZC",
        "20911": "PF",
        "20985": "AW",
        "21032": "PB",
        "21048": "XQ",
        "21049": "SC",
        "21089": "YS",
        "21119": "JC",
        "21242": "SB",
        "21273": "SC",
        "21305": "YP",
        "21306": "QO",
        "21330": "ZC",
        "21333": "SDC",
        "21345": "QK",
        "21378": "CA",
        "21397": "SC",
        "21414": "XS",
        "21442": "SC",
        "21477": "JG",
        "21480": "TD",
        "21484": "ZS",
        "21494": "YX",
        "21505": "YX",
        "21512": "HG",
        "21523": "XH",
        "21537": "PB",
        "21542": "PF",
        "21549": "KH",
        "21571": "E",
        "21574": "DA",
        "21588": "TD",
        "21589": "O",
        "21618": "ZC",
        "21621": "KHA",
        "21632": "ZJ",
        "21654": "KG",
        "21679": "LKG",
        "21683": "KH",
        "21710": "A",
        "21719": "YH",
        "21734": "WOE",
        "21769": "A",
        "21780": "WN",
        "21804": "XH",
        "21834": "A",
        "21899": "ZD",
        "21903": "RN",
        "21908": "WO",
        "21939": "ZC",
        "21956": "SA",
        "21964": "YA",
        "21970": "TD",
        "22003": "A",
        "22031": "JG",
        "22040": "XS",
        "22060": "ZC",
        "22066": "ZC",
        "22079": "MH",
        "22129": "XJ",
        "22179": "XA",
        "22237": "NJ",
        "22244": "TD",
        "22280": "JQ",
        "22300": "YH",
        "22313": "XW",
        "22331": "YQ",
        "22343": "YJ",
        "22351": "PH",
        "22395": "DC",
        "22412": "TD",
        "22484": "PB",
        "22500": "PB",
        "22534": "ZD",
        "22549": "DH",
        "22561": "PB",
        "22612": "TD",
        "22771": "KQ",
        "22831": "HB",
        "22841": "JG",
        "22855": "QJ",
        "22865": "XQ",
        "23013": "ML",
        "23081": "WM",
        "23487": "SX",
        "23558": "QJ",
        "23561": "YW",
        "23586": "YW",
        "23614": "YW",
        "23615": "SN",
        "23631": "PB",
        "23646": "ZS",
        "23663": "ZT",
        "23673": "YG",
        "23762": "TD",
        "23769": "ZS",
        "23780": "QJ",
        "23884": "QK",
        "24055": "XH",
        "24113": "DC",
        "24162": "ZC",
        "24191": "GA",
        "24273": "QJ",
        "24324": "NL",
        "24377": "TD",
        "24378": "QJ",
        "24439": "PF",
        "24554": "ZS",
        "24683": "TD",
        "24694": "WE",
        "24733": "LK",
        "24925": "TN",
        "25094": "ZG",
        "25100": "XQ",
        "25103": "XH",
        "25153": "PB",
        "25170": "PB",
        "25179": "KG",
        "25203": "PB",
        "25240": "ZS",
        "25282": "FB",
        "25303": "NA",
        "25324": "KG",
        "25341": "ZY",
        "25373": "WZ",
        "25375": "XJ",
        "25384": "A",
        "25457": "A",
        "25528": "SD",
        "25530": "SC",
        "25552": "TD",
        "25774": "ZC",
        "25874": "ZC",
        "26044": "YW",
        "26080": "WM",
        "26292": "PB",
        "26333": "PB",
        "26355": "ZY",
        "26366": "CZ",
        "26397": "ZC",
        "26399": "QJ",
        "26415": "ZS",
        "26451": "SB",
        "26526": "ZC",
        "26552": "JG",
        "26561": "TD",
        "26588": "JG",
        "26597": "CZ",
        "26629": "ZS",
        "26638": "YL",
        "26646": "XQ",
        "26653": "KG",
        "26657": "XJ",
        "26727": "HG",
        "26894": "ZC",
        "26937": "ZS",
        "26946": "ZC",
        "26999": "KJ",
        "27099": "KJ",
        "27449": "YQ",
        "27481": "XS",
        "27542": "ZS",
        "27663": "ZS",
        "27748": "TS",
        "27784": "SC",
        "27788": "ZD",
        "27795": "TD",
        "27812": "O",
        "27850": "PB",
        "27852": "MB",
        "27895": "SL",
        "27898": "PL",
        "27973": "QJ",
        "27981": "KH",
        "27986": "HX",
        "27994": "XJ",
        "28044": "YC",
        "28065": "WG",
        "28177": "SM",
        "28267": "QJ",
        "28291": "KH",
        "28337": "ZQ",
        "28463": "TL",
        "28548": "DC",
        "28601": "TD",
        "28689": "PB",
        "28805": "JG",
        "28820": "QG",
        "28846": "PB",
        "28952": "TD",
        "28975": "ZC",
        "29100": "A",
        "29325": "QJ",
        "29575": "SL",
        "29602": "FB",
        "30010": "TD",
        "30044": "CX",
        "30058": "PF",
        "30091": "YSP",
        "30111": "YN",
        "30229": "XJ",
        "30427": "SC",
        "30465": "SX",
        "30631": "YQ",
        "30655": "QJ",
        "30684": "QJG",
        "30707": "SD",
        "30729": "XH",
        "30796": "LG",
        "30917": "PB",
        "31074": "NM",
        "31085": "JZ",
        "31109": "SC",
        "31181": "ZC",
        "31192": "MLB",
        "31293": "JQ",
        "31400": "YX",
        "31584": "YJ",
        "31896": "ZN",
        "31909": "ZY",
        "31995": "XJ",
        "32321": "PF",
        "32327": "ZY",
        "32418": "HG",
        "32420": "XQ",
        "32421": "HG",
        "32438": "LG",
        "32473": "GJ",
        "32488": "TD",
        "32521": "QJ",
        "32527": "PB",
        "32562": "ZSQ",
        "32564": "JZ",
        "32735": "ZD",
        "32793": "PB",
        "33071": "PF",
        "33098": "XL",
        "33100": "YA",
        "33152": "PB",
        "33261": "CX",
        "33324": "BP",
        "33333": "TD",
        "33406": "YA",
        "33426": "WM",
        "33432": "PB",
        "33445": "JG",
        "33486": "ZN",
        "33493": "TS",
        "33507": "QJ",
        "33540": "QJ",
        "33544": "ZC",
        "33564": "XQ",
        "33617": "YT",
        "33632": "QJ",
        "33636": "XH",
        "33637": "YX",
        "33694": "WG",
        "33705": "PF",
        "33728": "YW",
        "33882": "SR",
        "34067": "WM",
        "34074": "YW",
        "34121": "QJ",
        "34255": "ZC",
        "34259": "XL",
        "34425": "JH",
        "34430": "XH",
        "34485": "KH",
        "34503": "YS",
        "34532": "HG",
        "34552": "XS",
        "34558": "YE",
        "34593": "ZL",
        "34660": "YQ",
        "34892": "XH",
        "34928": "SC",
        "34999": "QJ",
        "35048": "PB",
        "35059": "SC",
        "35098": "ZC",
        "35203": "TQ",
        "35265": "JX",
        "35299": "JX",
        "35782": "SZ",
        "35828": "YS",
        "35830": "E",
        "35843": "TD",
        "35895": "YG",
        "35977": "MH",
        "36158": "JG",
        "36228": "QJ",
        "36426": "XQ",
        "36466": "DC",
        "36710": "JC",
        "36711": "ZYG",
        "36767": "PB",
        "36866": "SK",
        "36951": "YW",
        "37034": "YX",
        "37063": "XH",
        "37218": "ZC",
        "37325": "ZC",
        "38063": "PB",
        "38079": "TD",
        "38085": "QY",
        "38107": "DC",
        "38116": "TD",
        "38123": "YD",
        "38224": "HG",
        "38241": "XTC",
        "38271": "ZC",
        "38415": "YE",
        "38426": "KH",
        "38461": "YD",
        "38463": "AE",
        "38466": "PB",
        "38477": "XJ",
        "38518": "YT",
        "38551": "WK",
        "38585": "ZC",
        "38704": "XS",
        "38739": "LJ",
        "38761": "GJ",
        "38808": "SQ",
        "39048": "JG",
        "39049": "XJ",
        "39052": "HG",
        "39076": "CZ",
        "39271": "XT",
        "39534": "TD",
        "39552": "TD",
        "39584": "PB",
        "39647": "SB",
        "39730": "LG",
        "39748": "TPB",
        "40109": "ZQ",
        "40479": "ND",
        "40516": "HG",
        "40536": "HG",
        "40583": "QJ",
        "40765": "YQ",
        "40784": "QJ",
        "40840": "YK",
        "40863": "QJG"
    };
    //参数,中文字符串
    //返回值:拼音首字母串数组
    function makePy(str) {
        if (typeof (str) != "string")
            throw new Error(-1, "函数makePy需要字符串类型参数!");
        var arrResult = new Array(); //保存中间结果的数组
        for (var i = 0, len = str.length; i < len; i++) {
            //获得unicode码
            var ch = str.charAt(i);
            //检查该unicode码是否在处理范围之内,在则返回该码对映汉字的拼音首字母,不在则调用其它函数处理
            arrResult.push(checkCh(ch));
        }
        //处理arrResult,返回所有可能的拼音首字母串数组
        return mkRslt(arrResult);
    }

    function checkCh(ch) {
        var uni = ch.charCodeAt(0);
        //如果不在汉字处理范围之内,返回原字符,也可以调用自己的处理函数
        if (uni > 40869 || uni < 19968)
            return ch; //dealWithOthers(ch);
        //检查是否是多音字,是按多音字处理,不是就直接在strChineseFirstPY字符串中找对应的首字母
        return (oMultiDiff[uni] ? oMultiDiff[uni] : (strChineseFirstPY.charAt(uni - 19968)));
    }

    function mkRslt(arr) {
        var arrRslt = [""];
        for (var i = 0, len = arr.length; i < len; i++) {
            var str = arr[i];
            var strlen = str.length;
            if (strlen == 1) {
                for (var k = 0; k < arrRslt.length; k++) {
                    arrRslt[k] += str;
                }
            } else {
                var tmpArr = arrRslt.slice(0);
                arrRslt = [];
                for (k = 0; k < strlen; k++) {
                    //复制一个相同的arrRslt
                    var tmp = tmpArr.slice(0);
                    //把当前字符str[k]添加到每个元素末尾
                    for (var j = 0; j < tmp.length; j++) {
                        tmp[j] += str.charAt(k);
                    }
                    //把复制并修改后的数组连接到arrRslt上
                    arrRslt = arrRslt.concat(tmp);
                }
            }
        }
        return arrRslt;
    }

    //两端去空格函数
    String.prototype.trim = function () {
        return this.replace(/(^\s*)|(\s*$)/g, "");
    }

    //查看拼音首字母缩写
    function query() {
        var str = document.getElementById("txtChinese").value.trim();
        if (str == "") return;
        var arrRslt = makePy(str);
        alert(arrRslt);
    }

    function setQuickCode(e) {
        var value = makePy(e.target.value)[0];
        cpxx.food.quickCode = value;
        dispatch({
            type: 'cpxx/updatePayload',
            payload: { food: cpxx.food }
        });

    }

    const children1 = [];

    if (tcxx.printList) {
        tcxx.printList.map((i, j) => {

            children1.push(
                <Option key={i.key} value={i.key}>{i.value}</Option>
            )

        });
    }

    const childrenCpdw = [];

    if (cpdw.all && cpdw.all.length > 0){
        cpdw.all.map((i,j) => {

            childrenCpdw.push(
                <Option key={i.key} value={i.key}>{i.value}</Option>
            )

        });
    }

    function nextStep() {
        validateFields((errors) => {
            if (!!errors) {
                return false;
            }

            if (typeof(cpxx.price)=="undefined"){
                message.warning('请填写价格');
                return;
            }

            if (typeof(cpxx.vipPrice)=="undefined"){
                message.warning('请填写会员价');
                return;
            }

            if (cpxx.vipPrice > cpxx.price) {
                message.warning('会员价格不能比售价高');
                return;
            }

            if (typeof(cpxx.estimateCost)=="undefined"){
                message.warning('请填写成本价');
                return;
            }

            let value = getFieldsValue();


            var isRepeat = false;

            // cpxx.specList.map((i)=>{

            //     if(i.price == null ||i.vipPrice == null || i.boxNum == null){

            //         isRepeat =true;
            //     }

            // })

            cpxx.specList.length > 1 && cpxx.specList.map((i)=>{

                if(i.name == null || i.name == ""){

                    isRepeat = true;
                }

            })

            if(isRepeat == true)
            {
                message.warning('规格名称为空或重复');
                return;
            }


            var isDefault = true;

            if (cpxx.specList && cpxx.specList.length > 0) {

                cpxx.specList.map((i)=>{

                    if(i.isDefault == true){

                        isDefault = false;
                    }

                })

                if(isDefault == true)
                {
                    message.warning('请选择默认规格');
                    return;
                }
            }

            value.methods && value.methods.map((item, i) => {
                item.pricingMoney = item.pricingMoney * 100;
            });

            dispatch({type: 'cpxx/updateFood', payload: {food: value}});
            dispatch({type: 'cpxx/queryFoodAdd', payload: {}});
        })
    }



    const onSpecs = (e) => {

        dispatch({
            type: 'cpxx/updatePayload', payload: {
                onSpecs: e.target.checked
            }
        })

        if (e.target.checked == false) {

            dispatch({
                type: 'cpxx/updatePayload', payload: {
                    specList: []
                }
            })

            return;
        }

        if(cpxx.specList.length == 0){
            dispatch({
                type: 'cpxx/updatePayload', payload: {
                    specList: [{index:1,specId:0,name:'',price:0,vipPrice:0,boxNum:0,isDefault:0,estimateCost:0}]
                }
            })

        }

    };

    // 做法操作
    const addMethod = (e) => {
        let selectMethod = zfgl.idItem[getFieldValue("selectMethod")];
        if (selectMethod) {
            cpxx.food.methods.push({
                    methodId: selectMethod.id,
                    name: selectMethod.name,
                    pricingType: selectMethod.pricingType,
                    pricingRate: selectMethod.pricingRate,
                    pricingMoney: selectMethod.pricingMoney,
                }
            );
            dispatch({
                type: 'cpxx/updatePayload', payload: {
                    food: cpxx.food
                }
            });
        }
    };
    const deleteMethod = (item, index) => {
        // array.splice(i, 1);
        cpxx.food.methods.splice(index, 1);
        dispatch({
            type: 'cpxx/updatePayload', payload: {
                food: cpxx.food
            }
        });
    };
    const onMethods = (e) => {
        dispatch({
            type: 'cpxx/updatePayload', payload: {
                onMethods: e.target.checked
            }
        })
    };

    //限制小数点后只能输入两位
    function onChangeValueFormatter(value){
        var regex = "^[0-9]*(\.[0-9]{0,2})?$";
        var patt = new RegExp(regex);
        let isPatt = patt.test(value);
        let valueNew = value;

        if(!isPatt&valueNew){

            valueNew = valueNew.substring(0,valueNew.length-1);
        }

        return valueNew;
    }


    var printCategoryName = '';
    if (tcxx.printList) {
        tcxx.printList.map((i) =>{
            if (cpxx.food.printCategoryId == i.key ) {

                printCategoryName = i.value;

            }

        })
    }

    function onAdd(index){

        cpxx.specList.push({index: cpxx.specList.length+1});
        dispatch({
            type: 'cpxx/updatePayload', payload: {
                specList: cpxx.specList
            }
        })

    }

    function managerOperateHandle(record,index){

        let handlebtn = [];
        handlebtn.push(
            <div style = {{width:'80px'}}  key={index} >
                    <a disabled={cpxx.manageType ==1?true:false} onClick={()=>onAdd(index)}>增加</a>
                    <span className="ant-divider"/>

                        <a disabled={cpxx.manageType ==1?true:false} onClick = {()=>{

                            cpxx.specList.splice(index,1);

                            cpxx.specList.map((i,j)=>{

                                i.index = j+1;
                            });

                            dispatch({
                                type: 'cpxx/updatePayload', payload: {
                                    specList: cpxx.specList
                                }
                            })


                        }}>删除</a>

                </div>);

        return handlebtn;

    }
    function onSelect(e,index){

        var name = '';
        gggl.all.map((j)=>{

            if (e == j.key) {
                name = j.value;

            }
        });

        var isRepeat = false;
        cpxx.specList.map((i)=>{

            if (i.specId == e) {
                isRepeat = true;

            }

        })

        if (isRepeat) {

            message.warning('添加的'+ name +'规格重复');
            return;
        }

        cpxx.specList[index].specId = e;
        cpxx.specList[index].name = name ;
        cpxx.specList[index].price = 0;
        cpxx.specList[index].vipPrice = 0;
        cpxx.specList[index].estimateCost = 0;
        cpxx.specList[index].boxNum = 0;
        cpxx.specList[index].isDefault = 0;

        dispatch({
            type: 'cpxx/updatePayload', payload: {
                specList: cpxx.specList
            }
        })


    }

    function managerSpecHandle(record,index){

        let handlebtn = [];

        if (cpxx.specList.length > 1){
            handlebtn.push(
                <Select disabled={cpxx.manageType ==1?true:false} placeholder="请选择" value = {cpxx.specList[index].name} style={{width: 120}} onChange = {(e)=>onSelect(e,index)}>
                    {gggl.all.map(item => <Option key={item.key}>{item.value}</Option>)}
                </Select>)

        }else {
            handlebtn.push(
                <div style={{width: 120}}>
                </div>)
        }

        return handlebtn;

    }

    function managerPriceHandle(record,index){

        let handlebtn = [];
        handlebtn.push(
            <InputNumber disabled={cpxx.manageType ==1?true:false} style = {{width:'80px'}} value = {(cpxx.specList[index].price != null)?cpxx.specList[index].price:0} min={0} max={Infinity} step={0.01} formatter={onChangeValueFormatter}  onChange = {(e)=>{
                var list = cpxx.specList;
                list[index].price = e;

                if (list[index].isDefault ==1) {
                    dispatch({
                        type: 'cpxx/updatePayload', payload: {
                            price:  e,
                        }
                    })
                }
                dispatch({
                    type: 'cpxx/updatePayload', payload: {
                        specList:  list
                    }
                })
            }}>
            </InputNumber>);

        return handlebtn;

    }

    function managerVipPriceHandle(record,index){

        let handlebtn = [];
        handlebtn.push(
            <InputNumber disabled={cpxx.manageType ==1?true:false} style = {{width:'80px'}} value = {(cpxx.specList[index].vipPrice != null)?cpxx.specList[index].vipPrice:0} min={0} max={Infinity} step={0.01} formatter={onChangeValueFormatter} onChange = {(e)=>{
                var list = cpxx.specList;
                list[index].vipPrice = e;

                if (list[index].isDefault ==1) {
                    dispatch({
                        type: 'cpxx/updatePayload', payload: {
                            vipPrice:  e,
                        }
                    })
                }

                dispatch({
                    type: 'cpxx/updatePayload', payload: {
                        specList:  list
                    }
                })
            }}>
            </InputNumber>);

        return handlebtn;

    }

    function managerEstimateCostHandle(record,index){

        let handlebtn = [];
        handlebtn.push(
            <InputNumber disabled={cpxx.manageType ==1?true:false} style = {{width:'80px'}} value = {(cpxx.specList[index].estimateCost != null)?cpxx.specList[index].estimateCost:0} min={0} max={Infinity} step={0.01} formatter={onChangeValueFormatter} onChange = {(e)=>{
                var list = cpxx.specList;
                list[index].estimateCost = e;

                if (list[index].isDefault ==1) {
                    dispatch({
                        type: 'cpxx/updatePayload', payload: {
                            estimateCost:  e,
                        }
                    })
                }

                dispatch({
                    type: 'cpxx/updatePayload', payload: {
                        specList:  list
                    }
                })
            }}>
            </InputNumber>);

        return handlebtn;

    }

    function managerDefaultHandle(record,index){

        let handlebtn = [];
        handlebtn.push(
            <Radio disabled={cpxx.manageType ==1?true:false} onChange = {
                (e)=>{

                    var list = cpxx.specList;
                    // list[index].isDefault = e.target.checked ?'1':0;
                    list.map((i)=>{
                        if (e.target.checked == true) {


                            if (i.index == index+1) {
                                i.isDefault =1;
                                dispatch({
                                    type: 'cpxx/updatePayload', payload: {
                                        price:  record.price,
                                        vipPrice:record.vipPrice,
                                        estimateCost:record.estimateCost,
                                        defaultBox:record.boxNum,
                                    }
                                })
                            }else{
                                i.isDefault = 0;
                            }

                        }


                    })
                    dispatch({
                        type: 'cpxx/updatePayload', payload: {
                            specList:  list
                        }
                    })
                }
            }  checked = {(cpxx.specList[index].isDefault == 1)?true:false}>
            </Radio>);

        return handlebtn;

    }

    //限制小数点后只能输入两位
    function onChangeValueFormatter(value){
        var regex = "^[0-9]*(\.[0-9]{0,2})?$";
        var patt = new RegExp(regex);
        let isPatt = patt.test(value);
        let valueNew = value;

        if(!isPatt && valueNew){

            valueNew = valueNew.substring(0,valueNew.length-1);
        }

        return valueNew;
    }

    function managerBoxNumHandle(record,index){
        let handlebtn = [];
        handlebtn.push(
            <InputNumber disabled={cpxx.manageType ==1?true:false} style = {{width:'60px'}} value = {(cpxx.specList[index].boxNum != null)?cpxx.specList[index].boxNum:0} onChange = {(e)=>{
                var list = cpxx.specList;
                list[index].boxNum = e;

                if (list[index].isDefault ==1) {
                    dispatch({
                        type: 'cpxx/updatePayload', payload: {
                            defaultBox: e,
                        }
                    })
                }

                dispatch({
                    type: 'cpxx/updatePayload', payload: {
                        specList:  list
                    }
                })
            }}>
            </InputNumber>);

        return handlebtn;

    }

    const columns = [
        {
            title: '序号',
            dataIndex: 'index',
            key: 'index',
        },
        {
            title: '操作',
            dataIndex: 'operate',
            key: 'operate',
            render: (text, record, index) => (
                managerOperateHandle(record, index)
            ),
        }, {
            title: '规格',
            dataIndex: 'name',
            key: 'name',
            render: (text, record, index) => (
                managerSpecHandle(record, index)
            ),

        }, {
            title: '价格',
            dataIndex: 'price',
            key: 'price',
            render: (text, record, index) => (
                managerPriceHandle(record, index)
            ),
        }, {
            title: '会员价',
            dataIndex: 'vipPrice',
            key: 'vipPrice',
            render: (text, record, index) => (
                managerVipPriceHandle(record, index)
            ),
        }, {
            title: '成本价',
            dataIndex: 'estimateCost',
            key: 'estimateCost',
            render: (text, record, index) => (
                managerEstimateCostHandle(record, index)
            ),
        },
        {
            title: '餐盒数',
            dataIndex: 'boxNum',
            key: 'boxNum',
            render: (text, record, index) => (
                managerBoxNumHandle(record, index)
            ),
        }, {
            title: '默认',
            key: 'operation',
            dataIndex: 'operation',
            render: (text, record, index) => (
                managerDefaultHandle(record, index)
            ),
            width:80,
        }
    ];

    const _food = {...cpxx.food};


    //处理商品图片
    function onSmallImgChange(e) {

        if (e.previewImage && e.previewImage.length > 0 && e.previewImage[0].response && e.previewImage[0].response.data) {
            cpxx.food.smallImgUrl = e.previewImage[0].response.data;
            dispatch({type: 'cpxx/updatePayload', payload: {food: cpxx.food}});
        }

    }

    function onSmallImgRemove(e) {
        cpxx.food.smallImgUrl = "";
        dispatch({type: 'cpxx/updatePayload', payload: {food: cpxx.food}});

    }

    //处理商品图片
    function onMediumImgChange(e) {

        if (e.previewImage && e.previewImage.length > 0 && e.previewImage[0].response && e.previewImage[0].response.data) {
            cpxx.food.imgUrl = e.previewImage[0].response.data;
            dispatch({type: 'cpxx/updatePayload', payload: {food: cpxx.food}});
        }

    }

    function onMediumImgRemove(e) {
        cpxx.food.imgUrl = "";
        dispatch({type: 'cpxx/updatePayload', payload: {food: cpxx.food}});

    }

    //处理商品图片
    function onBigImgChange(e) {

        if (e.previewImage && e.previewImage.length > 0 && e.previewImage[0].response && e.previewImage[0].response.data) {
            cpxx.food.bigImgUrl = e.previewImage[0].response.data;
            dispatch({type: 'cpxx/updatePayload', payload: {food: cpxx.food}});
        }

    }

    function onBigImgRemove(e) {
        cpxx.food.bigImgUrl = "";
        dispatch({type: 'cpxx/updatePayload', payload: {food: cpxx.food}});

    }

    //处理商品图片
    function onCookImgChange(e) {

        if (e.previewImage && e.previewImage.length > 0 && e.previewImage[0].response && e.previewImage[0].response.data) {
            cpxx.food.cookImgUrl = e.previewImage[0].response.data;
            dispatch({type: 'cpxx/updatePayload', payload: {food: cpxx.food}});
        }

    }

    function onCookImgRemove(e) {
        cpxx.food.cookImgUrl = "";
        dispatch({type: 'cpxx/updatePayload', payload: {food: cpxx.food}});

    }

    function prevStep() {
        window.history.back();
    }

    const UpLoadImageSmallGen = () =>
        <UpLoadImage defaultUrl={_food.smallImgUrl} onChange={(e) => {onSmallImgChange(e)}} maxCount={1} info={"添加图片"} onRemove={(e) => {onSmallImgRemove(e)}}> </UpLoadImage>

    const UpLoadImageMediumGen = () =>
        <UpLoadImage defaultUrl={_food.imgUrl} onChange={(e) => {onMediumImgChange(e)}} maxCount={1} info={"添加图片"} onRemove={(e) => {onMediumImgRemove(e)}}> </UpLoadImage>

    const UpLoadImageBigGen = () =>
        <UpLoadImage defaultUrl={_food.bigImgUrl} onChange={(e) => {onBigImgChange(e)}} maxCount={1} info={"添加图片"} onRemove={(e) => {onBigImgRemove(e)}}> </UpLoadImage>

    const UpLoadImageCookGen = () =>
        <UpLoadImage defaultUrl={_food.cookImgUrl} onChange={(e) => {onCookImgChange(e)}} maxCount={1} info={"添加图片"} onRemove={(e) => {onCookImgRemove(e)}}> </UpLoadImage>


    function goBack(){

        window.history.back();

    }

    function recommendChange(e){

        let newFood = cpxx.food;
        if (e.target.checked){

            newFood.isRecommend = 1;

        }else {

            newFood.isRecommend = 0;

        }
        dispatch({type: 'cpxx/updatePayload', payload: {food: newFood}});

    }

    const columnsRight = [
        {
            title: '序号',
            dataIndex: 'orderNo',
            key: 'orderNo',
            render: (text, record,index) => (
                managerOrderNoHandle(record,index)
            ),

        },
        {
            title: '菜品/规格',
            dataIndex: 'recommendFoodName',
            key: 'recommendFoodName',
            render: (text, record,index) => (
                managerFoodNameAndSpecHandleRight(record,index)
            ),
        },
        {
            title: '价格',
            dataIndex: 'specName',
            key: 'specName',
            render: (text, record,index) => (
                managerPriceAndSpecHandleRight(record,index)
            ),
        },
        {
            title: '原价立减',
            dataIndex: 'originReduce',
            key: 'originReduce',
            render: (text, record,index) => (
                managerOriginReduceHandle(record,index)
            ),
        },
        {
            title: '会员立减',
            dataIndex: 'vipReduce',
            key: 'vipReduce',
            render: (text, record,index) => (
                managerVipReduceHandle(record,index)
            ),
        },
        {
            title: '最大搭配数量',
            dataIndex: 'maxCount',
            key: 'maxCount',
            render: (text, record,index) => (
                managerMaxCountHandle(record,index)
            ),
        },
        {
            title: '操作',
            key: 'operation',
            dataIndex: 'operation',
            render: (text, record,index) => (
                managerHandle(record,index)
            ),
        }
    ];

    function managerOrderNoHandle(record,index){

        var orderNo = '';

        if(record.orderNo)
        {
            orderNo = record.orderNo;
        }else{

            orderNo = '备选'
        }


        return orderNo;

    }

    function managerPriceAndSpecHandleRight(record,index){
        var handlebtn=[];

        handlebtn.push(<div style={{display:'block',whiteSpace:'nowrap'}} key={index}>
                        <span style={{display:'block'}}>&nbsp;&nbsp;&nbsp;&nbsp;原价：{(record.originPrice != null)?record.originPrice:0}元</span>
                        <span style={{display:'block'}}>会员价：{(record.vipPrice != null)?record.vipPrice:0}元</span>
                        </div>)

        return handlebtn;


    }

    function managerFoodNameAndSpecHandleRight(record,index){
        var handlebtn=[];

        handlebtn.push(<span style={{display:'block',whiteSpace:'nowrap'}} key={index} >
                               {record.recommendFoodName}/{record.specName}
                              </span>)

        return handlebtn;


    }


    function managerOrderNoHandle(record,index){

        var orderNo = '';

        orderNo = record.orderNo;

        return orderNo;

    }

    function onMaxCountInput(e,index){

        cpxx.recommendFoods[index].maxCount = e;

        dispatch({type: 'cpxx/updatePayload',payload:{recommendFoods:cpxx.recommendFoods}});

    }
    function managerMaxCountHandle(record,index){

        var handlebtn=[];
        if(!record.maxCount){

            record.maxCount = 1;
        }

        handlebtn.push(
            <InputNumber disabled={cpxx.manageType ==1?true:false} min={0} max={Infinity} step={1} formatter={onChangeValueFormatter} onChange = {(e)=>onMaxCountInput(e,index)} value = {record.maxCount}/>
        )

        return handlebtn;
    }

    function managerOrderNoHandle(record,index){

        return index+1;

    }

    function onOriginReduceInput(e,index){
        // console.log(index)
        // console.log(cpxx.recommendFoods[index].originReduce)
        // console.log( e)
        cpxx.recommendFoods[index].originReduce = e;

        dispatch({type: 'cpxx/updatePayload',payload:{recommendFoods:cpxx.recommendFoods}});

    }

    function onOriginReduceBlur(record,index){

        var newOriginReduce = cpxx.recommendFoods[index].originReduce;


        if (newOriginReduce >= record.originPrice){

            cpxx.recommendFoods[index].originReduce = 0;

            dispatch({type: 'cpxx/updatePayload',payload:{recommendFoods:cpxx.recommendFoods}});

            message.warning('立减价必须小于菜品原价');
            return;
        }



    }

    function managerOriginReduceHandle(record,index){
        var handlebtn=[];

        handlebtn.push(<span style={{display:'block',whiteSpace:'nowrap'}} key={index} >
                 立减&nbsp;&nbsp;<InputNumber disabled={cpxx.manageType ==1?true:false} min={0} max={Infinity} step={0.01} formatter={onChangeValueFormatter} onBlur = {(e)=>onOriginReduceBlur(record,index)} onChange = {(e)=>onOriginReduceInput(e,index)} value = {(record.originReduce==null)?0:record.originReduce}/>&nbsp;&nbsp;元
              </span>)

        return handlebtn;

    }

    function onVipReduceInput(e,index){
        cpxx.recommendFoods[index].vipReduce = e;

        dispatch({type: 'cpxx/updatePayload',payload:{recommendFoods:cpxx.recommendFoods}});

    }

    function onVipReduceBlur(record,index){

        var newVipReduce = cpxx.recommendFoods[index].vipReduce;

        if (newVipReduce >= record.vipPrice){

            cpxx.recommendFoods[index].vipReduce = 0;

            dispatch({type: 'cpxx/updatePayload',payload:{recommendFoods:cpxx.recommendFoods}});

            message.warning('会员价立减必须小于菜品会员价');
            return;
        }



    }


    function managerVipReduceHandle(record,index){
        var handlebtn=[];

        handlebtn.push(<span style={{display:'block',whiteSpace:'nowrap'}} key={index} >
                 立减&nbsp;&nbsp;<InputNumber disabled={cpxx.manageType ==1?true:false} min={0} max={Infinity} step={0.01} formatter={onChangeValueFormatter} onBlur = {(e)=>onVipReduceBlur(record,index)}onChange = {(e)=>onVipReduceInput(e,index)} value = {(record.vipReduce==null)?0:record.vipReduce}/>&nbsp;&nbsp;元
              </span>)

        return handlebtn;

    }


    function managerHandle(record,index){


        var handlebtn=[];

        handlebtn.push(<span style={{display:'block',whiteSpace:'nowrap'}} key={index} >
                 <a disabled={cpxx.manageType ==1?true:false} onClick={() =>{onDelete(index)}}>删除</a>
              </span>)

        return handlebtn;
    }

    function onDelete(index){

        var selectedList = cpxx.recommendFoods;

        if(selectedList.length <= index){

            return;

        }

        selectedList.splice(index,1);

        dispatch({type: 'cpxx/updatePayload',payload:{recommendFoods:selectedList}});

    }



    const modalProps = {
        cpfl,
        cpxx,
        dispatch,
        tcxx,
    };


    function cpxxDetailClick(){

        dispatch({type: 'cpxx/updatePayload', payload: {cpxxDetailVisible: true}});
    }

    return (
        <div className={styles.search}>

            <Breadcrumb style = {{marginTop:'30px',marginLeft:'20px'}}>
                <Breadcrumb.Item><a  onClick={goBack}>菜单管理</a></Breadcrumb.Item>
                <Breadcrumb.Item>添加菜品</Breadcrumb.Item>
            </Breadcrumb>
          <div>
            <Form id={"firstForm"} style = {{marginTop:'50px'}}>
                <FormItem
                    {...formItemLayout}
                    label="菜品名称"

                    extra="（此项为必填项，不能填写已有的菜品！）"
                >
                    {getFieldDecorator('name', {
                        initialValue: cpxx.food.name,
                        rules: [
                            {
                                validator: (rule, value, callback) => {
                                    if (cpxx.food.id) {
                                        dispatch({
                                            type: 'cpxx/checkName',
                                            payload: {"callback": callback, "value": value,"id":cpxx.food.id}
                                        });
                                    } else {
                                        dispatch({
                                            type: 'cpxx/checkName',
                                            payload: { "callback": callback, "value": value }
                                        });
                                    }
                                }
                            },
                            {
                                required: true, message: '请输入菜品名称',
                            }
                        ]
                    })(
                        <Input disabled={cpxx.manageType == 1} onChange={setQuickCode} />
                    )}
                </FormItem>
                <FormItem
                    {...formItemLayout}
                    label="快捷码"

                    extra="（此项根据菜品名称自动生成,也可自行修改！）"
                >
                    {getFieldDecorator('quickCode', {
                        initialValue: cpxx.food.quickCode,
                        rules: [{
                            required: true, message: '请输入快捷码',
                        }],
                    })(
                        <Input disabled={cpxx.manageType == 1}/>
                    )}
                </FormItem>
                <FormItem
                    {...formItemLayout}
                    label="菜品编码"

                    extra={"（编码为五位数字,限制00001-99999之间不可重复,当前最大编码为" + (cpxx.foodMaxCode?cpxx.foodMaxCode:"00001") + '）'}
                >
                    {getFieldDecorator('code', {
                        initialValue: cpxx.food.code,
                        rules: [
                            {
                                // validator: (rule, value, callback) => {
                                //     if (cpxx.food.id) {
                                //         dispatch({
                                //             type: 'cpxx/checkQuickCode',
                                //             payload: {"callback": callback, "value": value,"id":cpxx.food.id}
                                //         });
                                //     } else {
                                //         dispatch({
                                //             type: 'cpxx/checkQuickCode',
                                //             payload: { "callback": callback, "value": value }
                                //         });
                                //     }
                                // }
                            },
                            {
                                required: true, message: '请输入菜品编码',
                            },{pattern:/^\d{5}$/, message: '请输入五位数字'}
                        ]
                    })(
                        <Input disabled={cpxx.manageType == 1} maxLength='5' />
                    )}
                </FormItem>
                <FormItem
                    {...formItemLayout}
                    label="第二语言"

                    extra="（菜品第二语言在扫码点餐页展示，英语、少数民族语言）"
                >
                    {getFieldDecorator('english', {
                        initialValue: cpxx.food.english,
                        rules: [{
                            required: false, message: '请输入备注名称',
                        }],
                    })(
                        <Input disabled={cpxx.manageType == 1} />
                    )}
                </FormItem>
                <FormItem
                    {...formItemLayout}
                    label="菜品分类"

                    extra="（选择所需菜品类别，不能不选！）"
                >
                    {getFieldDecorator('categoryId', {
                        initialValue: cpxx.food.categoryId,
                        rules: [
                            { required: true, message: '请选择分类' }
                        ]
                    })(
                        <Select disabled={cpxx.manageType == 1} placeholder="请选择">
                            {children}
                        </Select>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="菜品单位"

                    extra="选择所需菜品类别，不能不选！"
                >
                    {getFieldDecorator('unitId', {
                        initialValue: cpxx.food.unitId,
                        rules: [
                            {required: true, message: '请选择菜品单位'}
                        ]
                    })(
                        <Select disabled={cpxx.manageType == 1} placeholder="请选择">
                            {childrenCpdw}
                        </Select>
                    )}
                </FormItem>

                {/*<FormItem*/}
                    {/*{...formItemLayout}*/}
                    {/*label="称重菜"*/}

                    {/*extra="称重菜的菜品单位要与电子秤设置的单位保持一致"*/}
                {/*>*/}
                    {/*{getFieldDecorator('isWeigh', {*/}
                        {/*initialValue: "",*/}
                        {/*rules: [*/}
                            {/*{required: false, message: ''}*/}
                        {/*]*/}
                    {/*})(*/}
                        {/*<Checkbox checked={cpxx.food.isWeigh} onChange={(e) => {*/}
                            {/*dispatch({type: 'cpxx/updateFood', payload: {food: {isWeigh: e.target.value ? 0 : 1}}});*/}
                        {/*}}>称重菜</Checkbox>*/}
                    {/*)}*/}
                {/*</FormItem>*/}

                <FormItem style= {{display:'none'}}
                          {...formItemLayout}
                          label="必选菜"

                          extra="选择人数后，会按人数自动添加必选菜品，数量与人数相同本功能适用于扫码点餐（含预订）"
                >
                    {getFieldDecorator('isMust', {
                        initialValue: cpxx.food.isMust,
                        rules: [
                            {required: false, message: ''}
                        ]
                    })(
                        <RadioGroup disabled={cpxx.manageType == 1}>
                            <Radio value={1}>是</Radio>
                            <Radio value={0}>否</Radio>
                        </RadioGroup>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="规格"


                >
                    {getFieldDecorator('spec', {
                        initialValue: "",
                        rules: [
                            {required: false, message: '请选择菜品单位'}
                        ]
                    })(
                        <Table className={styles.table}
                               columns={columns}
                               dataSource={cpxx.specList}
                               rowKey={record => record.index}
                               pagination={false}
                               bordered/>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="做法"


                >
                    {getFieldDecorator('Method', {
                        initialValue: "",
                        rules: [
                            {required: false, message: '请选择菜品单位'}
                        ]
                    })(
                        <Checkbox disabled={cpxx.manageType == 1} onChange={onMethods} checked={cpxx.onMethods}></Checkbox>
                    )}
                </FormItem>
                <div style={{display: (cpxx.onMethods ? "block" : "none")}}>
                    <FormItem
                        {...formItemLayout}
                        label="做法模板"
                    >
                        {getFieldDecorator("selectMethod", {
                            initialValue: '',
                            rules: [
                                {required: false, message: ''}
                            ]
                        })(
                            <Select disabled={cpxx.manageType ==1?true:false} placeholder="请选择" style={{width: 150}}>
                                {zfgl.all.map(item => <Option key={item.id}>{item.name}</Option>)}
                            </Select>
                        )}
                        <Button disabled={cpxx.manageType ==1?true:false} type="primary" style={{margin: '0 auto'}} onClick={addMethod}>选择模板</Button>
                    </FormItem>
                    <FormItem
                        {...formItemLayout}
                        label="做法结果">
                        <Row gutter={8}>
                            <Col span={1}></Col>
                            <Col span={4}>做法</Col>
                            <Col span={6}>加价类型</Col>
                            <Col span={6}>比例/金额</Col>
                            <Col span={2}>操作</Col>
                        </Row>
                        {cpxx.food.methods.map((item, index) => {
                            return (<Row gutter={8}>
                                <Col span={1}>{index}</Col>
                                <Col span={4}>
                                    {getFieldDecorator(`methods[${index}][methodId]`, {
                                        initialValue: item.methodId,
                                        rules: [
                                            {required: false, message: ''}
                                        ]
                                    })(
                                        <Input style={{display: "none"}}/>
                                    )}
                                    {getFieldDecorator(`methods[${index}][name]`, {
                                        initialValue: item.name,
                                        rules: [
                                            {required: false, message: ''}
                                        ]
                                    })(
                                        <Input disabled={cpxx.manageType ==1?true:false} disabled={true}/>
                                    )}
                                </Col>
                                <Col span={6}>
                                    {getFieldDecorator(`methods[${index}][pricingType]`, {
                                        initialValue: item.pricingType,
                                        rules: [
                                            {required: false, message: ''}
                                        ]
                                    })(
                                        <Input disabled={cpxx.manageType ==1?true:false} style={{display: "none"}}/>
                                    )}
                                    {getFieldDecorator(`methods[${index}][pricingName]`, {
                                        initialValue: {"0": "不加价", "1": "比例加价", "2": "固定加价"}[item.pricingType],
                                        rules: [
                                            {required: false, message: ''}
                                        ]
                                    })(
                                        <Input disabled={cpxx.manageType ==1?true:false} disabled={true}/>
                                    )}
                                </Col>
                                <Col span={6}>
                                    {getFieldDecorator(`methods[${index}][pricingRate]`, {
                                        initialValue: item.pricingRate,
                                        rules: [
                                            {required: false, message: ''}
                                        ]
                                    })(
                                        <Input disabled={cpxx.manageType ==1?true:false} style={{display: item.pricingType == "1" ? "block" : "none"}}/>
                                    )}
                                    {getFieldDecorator(`methods[${index}][pricingMoney]`, {
                                        initialValue: item.pricingMoney/100,
                                        rules: [
                                            {required: false, message: ''}
                                        ]
                                    })(
                                        <Input disabled={cpxx.manageType ==1?true:false} style={{display: item.pricingType == "2" ? "block" : "none"}}/>
                                    )}
                                </Col>
                                <Col span={2}>
                                    <a disabled={cpxx.manageType ==1?true:false} onClick={() => {
                                        deleteMethod(item, index)
                                    }}>删除</a>
                                </Col>
                            </Row>)
                        })}
                    </FormItem>
                </div>

                <FormItem
                    {...formItemLayout}
                    label="口味标签"


                >
                    {(
                        <div>

                            <span disabled={cpxx.manageType ==1?true:false}>{cpxx.labelTag.join('，')}</span>

                        </div>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="推荐搭配菜"
                >
                    {(
                        <div>
                             <Button disabled={cpxx.manageType == 1} style = {{marginLeft:5,marginBottom:10}} type = 'primary' onClick = {cpxxDetailClick}>选择菜品</Button>
                            <Table
                                columns={columnsRight}
                                dataSource={cpxx.recommendFoods}
                                rowKey={record => record.orderNo}
                                pagination={false}
                                bordered/>

                        </div>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="菜品出品部门"

                    extra="套餐如使用该菜品，则该起售数不生效"
                >
                    {getFieldDecorator('printCategoryId', {
                        initialValue: cpxx.food.printCategoryId,
                        rules: [
                            {required: true, message: '菜品出品部门'}
                        ]
                    })(
                        <Select placeholder="请选择">
                            {children1}
                        </Select>
                    )}
                </FormItem>

                <FormItem style= {{display:'none'}}
                          {...formItemLayout}
                          label="菜品提成"

                          extra="此项为必选项，不选默认为停用！"
                >
                    {getFieldDecorator('percent', {
                        initialValue: cpxx.food.percent,
                        rules: [
                            {required: false, message: ''}
                        ]
                    })(
                        <RadioGroup disabled={cpxx.manageType == 1}>
                            <Radio value={1}>是</Radio>
                            <Radio value={2}>否</Radio>
                        </RadioGroup>
                    )}
                </FormItem>


                <FormItem
                    {...formItemLayout}
                    label="图片"

                >
                    <div>
                        <div style={{display:(cpxx.manageType == 1)?'none':'block'}}>
                            <div style = {{float:'left'}}>
                                <UpLoadImageMediumGen />
                                <span style = {{display: 'block', width: 104, textAlign: 'center'}}>小图 588x320</span>
                            </div>

                            <div style = {{float:'left'}}>
                                <UpLoadImageSmallGen />
                                <span style = {{display: 'block', width: 104, textAlign: 'center'}}>中图 750x750</span>
                            </div>

                            <div style = {{float:'left'}}>
                                <UpLoadImageBigGen />
                                <span style = {{display: 'block', width: 104, textAlign: 'center'}}>大图 588x930</span>
                            </div>
                            <div style = {{float:'left',width:'100%'}}>
                               支持格式：jpg、png、jpep，图片不超过大小均不可超过5M
                            </div>
                        </div>

                        <div style={{display:(cpxx.manageType == 1)?'block':'block'}}>
                            <div style = {{float:'left'}}>
                                <div style={{width:104,height:104,padding:8,borderRadius: '4px',border: '1px solid #DBDBDB'}}><div style = {{background:'url('+(_food.imgUrl?_food.imgUrl:'')+ ') left top / 100% no-repeat',width:86,height:86}}/></div>
                                <span style = {{display: 'block', width: 104, textAlign: 'center'}}>小图 588x320</span>
                            </div>

                            <div style = {{float:'left',marginLeft:20}}>
                                <div style={{width:104,height:104,padding:8,borderRadius: '4px',border: '1px solid #DBDBDB'}}><div style = {{background:'url('+(_food.smallImgUrl?_food.smallImgUrl:'')+ ') left top / 100% no-repeat',width:86,height:86}}/></div>
                                <span style = {{display: 'block', width: 104, textAlign: 'center'}}>中图 750x750</span>
                            </div>

                            <div style = {{float:'left',marginLeft:20}}>
                                <div style={{width:104,height:104,padding:8,borderRadius: '4px',border: '1px solid #DBDBDB'}}><div style = {{background:'url('+(_food.bigImgUrl?_food.bigImgUrl:'')+ ') left top / 100% no-repeat',width:86,height:86}}/></div>
                                <span style = {{display: 'block', width: 104, textAlign: 'center'}}>大图 588x930</span>
                            </div>
                            <div style = {{float:'left',width:'100%'}}>
                                支持格式：jpg、png、jpep，图片不超过大小均不可超过5M
                            </div>
                        </div>
                    </div>

                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="辣度"

                >
                    {getFieldDecorator('spicyValue', {
                        initialValue: _food.spicyValue,
                        rules: [
                            {required: false, message: '请选择辣度'}
                        ]
                    })(
                        <Rate disabled={cpxx.manageType == 1} allowClear = {true}/>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="推荐度"

                >
                    {getFieldDecorator('recommendValue', {
                        initialValue: _food.recommendValue,
                        rules: [
                            {required: false, message: '请选择推荐度'}
                        ]
                    })(
                        <Rate disabled={cpxx.manageType == 1} allowClear = {true}/>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="推荐菜"

                    extra="（此项选择后将在微信公众号品牌馆推荐菜品，提高曝光率）"
                >
                    {getFieldDecorator('isRecommend', {
                        initialValue: cpxx.food.isRecommend==1,
                        rules: [
                            {required: false, message: ''}
                        ]
                    })(
                        <div>
                            <Checkbox disabled={cpxx.manageType == 1} checked = {cpxx.food.isRecommend==1} onChange = {recommendChange}>品牌馆推荐</Checkbox>
                        </div>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="企业折扣"

                    extra="（关闭后该菜品将不支持企业折扣）"
                >

                    <div>
                        <Switch checkedChildren="开" unCheckedChildren="关" checked = {cpxx.food.isCompanyDiscount == 0} onChange = {(checked)=>{

                            let newFood = cpxx.food;
                            if (checked){

                                newFood.isCompanyDiscount = 0;

                            }else {

                                newFood.isCompanyDiscount = 1;

                            }
                            dispatch({type: 'cpxx/updatePayload', payload: {food: newFood}});

                        }}/>
                    </div>

                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="爆品"

                    extra="（打开后微信菜单中将已大图展示）"
                >

                        <div>
                            <Switch disabled={cpxx.manageType == 1} checkedChildren="开" unCheckedChildren="关" checked = {cpxx.food.isBursting ==1} onChange = {(checked)=>{

                                let newFood = cpxx.food;
                                if (checked){

                                    newFood.isBursting = 1;

                                }else {

                                    newFood.isBursting = 0;

                                }
                                dispatch({type: 'cpxx/updatePayload', payload: {food: newFood}});

                            }}/>
                        </div>

                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="简介"
                    extra="最多输入200个字"
                >
                    {getFieldDecorator('remark', {
                        initialValue: _food.remark,
                        rules: [
                            {required: false, message: '简介'}
                        ]
                    })(
                        <Input disabled={cpxx.manageType == 1} type='textarea' maxLength={200}/>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="厨师长说"
                >

                    <div>
                        <Switch disabled={cpxx.manageType == 1} checkedChildren="开" unCheckedChildren="关" checked = {cpxx.food.isSay ==1} onChange = {(checked)=>{

                            let newFood = cpxx.food;
                            if (checked){

                                newFood.isSay = 1;

                            }else {

                                newFood.isSay = 0;

                            }
                            dispatch({type: 'cpxx/updatePayload', payload: {food: newFood}});

                        }}/>
                    </div>

                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="厨师长照片"

                >
                    <div>
                        <div style={{display:(cpxx.manageType == 1)?'none':'block'}}>
                            <div>
                                <UpLoadImageCookGen />
                                <span> 支持格式：jpg、png、jpep，图片不超过大小均不可超过5M</span>
                            </div>
                        </div>
                        <div style={{display:(cpxx.manageType == 1)?'block':'block'}}>
                            <div style = {{float:'left'}}>
                                <div style={{width:104,height:104,padding:8,borderRadius: '4px',border: '1px solid #DBDBDB'}}><div style = {{background:'url('+(_food.cookImgUrl?_food.cookImgUrl:'')+ ') left top / 100% no-repeat',width:86,height:86}}/></div>
                            </div>
                        </div>

                    </div>
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="厨师长姓名"
                    extra="最多输入10个字"
                >
                    {getFieldDecorator('cookName', {
                        initialValue: _food.cookName,

                    })(
                        <Input disabled={cpxx.manageType == 1} maxLength={10}/>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="厨师长称号"
                    extra="最多输入10个字"
                >
                    {getFieldDecorator('cookTitle', {
                        initialValue: _food.cookTitle,
                    })(
                        <Input disabled={cpxx.manageType == 1} maxLength={10}/>
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="厨师长说"
                    extra="最多输入200个字"
                >
                    {getFieldDecorator('cookSay', {
                        initialValue: _food.cookSay,
                    })(
                        <TextArea disabled={cpxx.manageType == 1} autosize={{ minRows: 2 }} maxLength={200} />
                    )}
                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="厨师说创建日期"
                >

                    <DatePicker disabled={cpxx.manageType == 1} allowClear={false} showTime format="YYYY-MM-DD HH:mm:ss" value = {_food.cookGmtCreate != 0 ?moment(new Date(_food.cookGmtCreate)):''} onChange = {(times)=>{

                        let newFood = cpxx.food;
                        newFood.cookGmtCreate = new Date(times).getTime();
                        dispatch({type: 'cpxx/updatePayload', payload: {food: newFood}});

                    }}/>

                </FormItem>

                <FormItem
                    {...formItemLayout}
                    label="状态"

                    extra="（此项为必选项，不选默认为在售！）"
                >
                    {getFieldDecorator('status', {
                        initialValue: (_food.status == null)?1:_food.status,
                        rules: [
                            {required: true, message: '状态'}
                        ]
                    })(
                        <RadioGroup disabled={cpxx.manageType == 1}>
                            <Radio value={1}>在售</Radio>
                            <Radio value={2}>停售</Radio>
                        </RadioGroup>
                    )}
                </FormItem>

            </Form>
          </div>
        <div style={{overflow:"hidden",padding: "0 30%",marginBottom:'50px'}}>
            <Button
                type="primary"
                style={{margin: '0 auto',width: "30%",float: "left"}}
                onClick={prevStep}>
                取消
            </Button>
            <Button
                type="primary"
                style={{margin: '0 auto',width: "30%",float: "right"}}
                onClick={nextStep}>
                保存
            </Button>
        </div>
            <CpxxDetailModal {...modalProps}    />
        </div>
    );
};


CpxxPage.propTypes = {
    visible: PropTypes.any,
    form: PropTypes.object,
    item: PropTypes.object,
};

export default Form.create()(CpxxPage);